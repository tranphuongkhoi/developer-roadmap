{
  "DlUQkDRPUcjC3pO4P5zCQ": {
    "title": "JavaScript Basics",
    "description": "JavaScript is a programming language that adds interactivity to websites. It allows you to create dynamic content, control multimedia, animate images, and much more. Think of HTML as the structure of a house, CSS as the interior design, and JavaScript as the electrical system that makes everything work. Understanding JavaScript is crucial before diving into Next.js because Next.js is built on top of React, which itself is a JavaScript library. Without a solid grasp of JavaScript fundamentals, you'll find it difficult to understand and effectively use Next.js's features and concepts.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated JavaScript Roadmap",
        "url": "https://roadmap.sh/javascript",
        "type": "article"
      },
      {
        "title": "The Modern JavaScript Tutorial",
        "url": "https://javascript.info/",
        "type": "article"
      },
      {
        "title": "Explore top posts about JavaScript",
        "url": "https://app.daily.dev/tags/javascript?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "JavaScript Crash Course for Beginners",
        "url": "https://youtu.be/hdI2bqOjy3c",
        "type": "video"
      }
    ]
  },
  "ey6z7Y4WtNtQJ50n-3j5P": {
    "title": "Why React",
    "description": "React is a JavaScript library designed for building user interfaces in a declarative and component-based way. It simplifies the process of creating dynamic and interactive web applications by allowing developers to break down complex UIs into smaller, reusable pieces. This approach promotes code maintainability, reusability, and efficiency, making it easier to manage and update large-scale frontend projects. React also works with tools like Redux for data management and React Native for mobile apps. It's popular because it's clear, fast, and has a big community.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated React Roadmap",
        "url": "https://roadmap.sh/react",
        "type": "article"
      },
      {
        "title": "React Website",
        "url": "https://react.dev",
        "type": "article"
      },
      {
        "title": "Explore top posts about React",
        "url": "https://app.daily.dev/tags/react?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Full Stack React Developer Course",
        "url": "https://www.youtube.com/watch?v=Bvwq_S0n2pk",
        "type": "video"
      }
    ]
  },
  "rJ3vuI58Z9u2SKTDgpTE2": {
    "title": "Why Frontend Frameworks",
    "description": "Building modern web applications often involves managing complex user interfaces, handling data efficiently, and ensuring a smooth user experience. Frontend frameworks like React, Angular, and Next.js provide a structured approach to these challenges. They offer pre-built components, routing solutions, state management tools, and optimized build processes, allowing developers to focus on building features rather than reinventing the wheel. This leads to faster development cycles, more maintainable code, and ultimately, better web applications.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Web3 Frontend â€“ Everything You Need to Learn About Building Dapp Frontends",
        "url": "https://moralis.io/web3-frontend-everything-you-need-to-learn-about-building-dapp-frontends/",
        "type": "article"
      },
      {
        "title": "xplore top posts about Frontend Development",
        "url": "https://app.daily.dev/tags/frontend?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "hat is the difference between a framework and a library?",
        "url": "https://www.youtube.com/watch?v=D_MO9vIRBcA",
        "type": "video"
      },
      {
        "title": "Which JS Framework is best?",
        "url": "https://www.youtube.com/watch?v=cuHDQhDhvPE",
        "type": "video"
      }
    ]
  },
  "ch5gUr8xeCIp-i48N5qew": {
    "title": "SPA vs SSR",
    "description": "Single-Page Applications (SPAs) load a single HTML page and dynamically update the content using JavaScript, providing a fluid user experience without full page reloads. Server-Side Rendering (SSR), on the other hand, generates the HTML on the server for each request, sending a fully rendered page to the client. Next.js allows you to choose between these approaches or even combine them, offering flexibility in optimizing for performance, SEO, and user experience.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "How to build single-page applications with Next.js",
        "url": "https://nextjs.org/docs/app/guides/single-page-applications",
        "type": "article"
      },
      {
        "title": "Server-side Rendering (SSR)",
        "url": "https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering",
        "type": "article"
      },
      {
        "title": "https://dev.to/santhanam87/ssr-vs-spa-showdown-choosing-the-right-rendering-approach-for-your-web-app-4439",
        "url": "https://dev.to/santhanam87/ssr-vs-spa-showdown-choosing-the-right-rendering-approach-for-your-web-app-4439",
        "type": "article"
      }
    ]
  },
  "tcDL4OEbZplbjNa8VTLpv": {
    "title": "Introduction",
    "description": "Next.js is a React framework that enables functionalities like server-side rendering and static site generation for web applications. It provides a structure for organizing React components, handling routing, and optimizing performance. Next.js simplifies the process of building production-ready, full-stack web applications with React.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Next.js",
        "url": "https://github.com/vercel/next.js",
        "type": "opensource"
      },
      {
        "title": "Next.js",
        "url": "https://nextjs.org/",
        "type": "article"
      },
      {
        "title": "Next.js Docs",
        "url": "https://nextjs.org/docs",
        "type": "article"
      },
      {
        "title": "Next.js Course",
        "url": "https://nextjs.org/learn",
        "type": "article"
      }
    ]
  },
  "uJrOHRLmEBZtHJzAAusUe": {
    "title": "Next.js",
    "description": "Next.js is a React framework that provides extra features and optimizations on top of React for building web applications. It simplifies development by offering solutions for routing, data fetching, and server-side rendering out of the box. This allows developers to create performant and scalable web applications with less configuration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Next.js",
        "url": "https://nextjs.org/",
        "type": "article"
      },
      {
        "title": "Mastering Next.js",
        "url": "https://masteringnextjs.com",
        "type": "article"
      },
      {
        "title": "Next.js Full course",
        "url": "https://www.youtube.com/watch?v=9P8mASSREYM",
        "type": "video"
      },
      {
        "title": "Next.js for Beginners - freeCodeCamp",
        "url": "https://youtu.be/KjY94sAKLlw?si=orve81YcY8Fm2vDy",
        "type": "video"
      }
    ]
  },
  "WxoMZRRiW9CGDZ9i80nbf": {
    "title": "Why Next.js",
    "description": "Next.js is a React framework that provides extra features and optimizations beyond what React offers on its own. When choosing a framework built on React, Next.js stands out because it simplifies development with features like built-in routing, server-side rendering, and static site generation. These capabilities improve performance, SEO, and the overall developer experience compared to building a React application from scratch or using other frameworks that require more manual configuration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "10 Must-Know Benefits of Next.js for Modern Web Apps",
        "url": "https://www.designrush.com/agency/web-development-companies/nextjs/trends/benefits-of-next-js",
        "type": "article"
      }
    ]
  },
  "G_33yo1MshQbiaGTPtTdK": {
    "title": "Remix",
    "description": "Remix is a full-stack web framework that focuses on web standards and modern web development patterns. It emphasizes server-side rendering and progressive enhancement to deliver fast and resilient user experiences. Remix leverages web fundamentals like HTTP caching and distributed systems to build robust and performant web applications.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Remix",
        "url": "https://remix.run/",
        "type": "article"
      },
      {
        "title": "Remix Docs",
        "url": "https://v2.remix.run/docs/",
        "type": "article"
      },
      {
        "title": "Remix Crash Course 2023",
        "url": "https://www.youtube.com/watch?v=RBYJTop1e-g",
        "type": "video"
      }
    ]
  },
  "1ch6ZXZP46FP8q3HeCqWM": {
    "title": "Rendering Strategies",
    "description": "Rendering strategies determine how your application's user interface is generated and delivered to the user's browser. Different strategies offer varying trade-offs between performance, SEO, and data freshness. Choosing the right rendering strategy is crucial for optimizing your application based on its specific requirements and content characteristics.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Rendering Strategies",
        "url": "https://nextjs.org/learn/seo/rendering-strategies",
        "type": "article"
      },
      {
        "title": "How to build single-page applications with Next.js",
        "url": "https://nextjs.org/docs/app/guides/single-page-applications",
        "type": "article"
      },
      {
        "title": "Next.js Rendering Strategies: SSR, SSG, and ISR Compared",
        "url": "https://hybridheroes.de/blog/2023-05-31-next-js-rendering-strategies/",
        "type": "article"
      }
    ]
  },
  "3tTTKj6PWsRoRRXH5tXxS": {
    "title": "create-next-app",
    "description": "The create-next-app CLI allow you to create a new Next.js application using the default template or an example from a public GitHub repository. It is the easiest way to get started with Next.js.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "create-next-app",
        "url": "https://nextjs.org/docs/app/api-reference/cli/create-next-app",
        "type": "article"
      },
      {
        "title": "Create Next App | Create Next Js Project",
        "url": "https://www.youtube.com/watch?v=o1cRvsrHbfo",
        "type": "video"
      }
    ]
  },
  "b2LcPc5MfoyF0W9Y0aGpR": {
    "title": "Loading and Streaming",
    "description": "",
    "links": []
  },
  "km7dLVpl76c5EfWvhhbRh": {
    "title": "Types of routers",
    "description": "Next.js has two different routers:\n\n*   **App Router**: The newer router that supports new React features like Server Components.\n*   **Pages Router**: The original router, still supported and being improved.\n\nBefore Next.js 13, the Pages Router was the main way to create routes in Next.js. It's still supported in newer versions of Next.js, but Next.js recommends migrating to the new App Router to leverage React's latest features.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Next.js Docs",
        "url": "https://nextjs.org/docs#app-router-and-pages-router",
        "type": "article"
      },
      {
        "title": "Next.js App vs. Pages Router - Which One is Better?",
        "url": "https://www.youtube.com/watch?v=EYDOXzpTRvw",
        "type": "video"
      }
    ]
  },
  "pxltXOWgpbo95V4u2ryX7": {
    "title": "Error States",
    "description": "",
    "links": []
  },
  "e_rwwlKsvyv9OMDDBXo_N": {
    "title": "Why use App Router?",
    "description": "",
    "links": []
  },
  "09uWsmXOXU0Ox7F3qsjRx": {
    "title": "Routing Patterns",
    "description": "",
    "links": []
  },
  "oFhmV5Xv0KJ-SjeYVZBpi": {
    "title": "Routing Terminology",
    "description": "",
    "links": []
  },
  "4H8aOVYsZiPbTQUYcZjb_": {
    "title": "API Endpoints",
    "description": "",
    "links": []
  },
  "IlWFMh44HtHDnIr7nqwtI": {
    "title": "Rendering Pages",
    "description": "",
    "links": []
  },
  "9egFwmy-o7Fx-M7FcPXXy": {
    "title": "Structuring Routes",
    "description": "",
    "links": []
  },
  "zJXCS7U9NUsn7cuEx3YMs": {
    "title": "Layouts and Templates",
    "description": "",
    "links": []
  },
  "xRZqBd5-QO8zh7ksHlRjK": {
    "title": "Next.js Routing Basics",
    "description": "Routing is the process of defining how an application responds to client requests to specific endpoints (URIs). In Next.js, routing is primarily file-system based. This means that the structure of your `pages` directory directly corresponds to the routes of your application. Each file in the `pages` directory becomes a route based on its filename. For example, a file named `about.js` in the `pages` directory will be accessible at the `/about` route.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "https://nextjs.org/docs/pages/building-your-application/routing",
        "url": "https://nextjs.org/docs/pages/building-your-application/routing",
        "type": "article"
      },
      {
        "title": "Defining Routes",
        "url": "https://nextjs.org/docs/14/app/building-your-application/routing/defining-routes",
        "type": "article"
      },
      {
        "title": "Next.js 15 Routing Explained For Beginners",
        "url": "https://www.youtube.com/watch?v=qivq_vDYFGk",
        "type": "video"
      }
    ]
  },
  "jYSa7UMmjb51pGAyU4PoB": {
    "title": "Client",
    "description": "",
    "links": []
  },
  "QDxYlIyFOuGUIy_ZovHs0": {
    "title": "Server",
    "description": "",
    "links": []
  },
  "UZCMVpg5YIDxu-AMah3S-": {
    "title": "Memoization in Fetch",
    "description": "",
    "links": []
  },
  "N5siOJO3dc9vJUTpbdm04": {
    "title": "Revalidating Cached Data",
    "description": "",
    "links": []
  },
  "crBlqiS78n7yz28cT2GGz": {
    "title": "React Cache",
    "description": "",
    "links": []
  },
  "qMYuXOlr_c-6oQKVOdGci": {
    "title": "Revalidation Errors",
    "description": "",
    "links": []
  },
  "77i6HVsnX-uSDw8vz3afD": {
    "title": "Caching Data",
    "description": "",
    "links": []
  },
  "SjJQ7ceU6vBhlhrN8hcvy": {
    "title": "Parallel vs Sequential",
    "description": "",
    "links": []
  },
  "Ve1Pa7IhGHPZ_F-sCMcNb": {
    "title": "Preloading Data",
    "description": "",
    "links": []
  },
  "GAHFfQ8CviNxV7ITpt--q": {
    "title": "Data Fetching Patterns",
    "description": "",
    "links": []
  },
  "Ti_Bl5NnRIY9UTNTH15xA": {
    "title": "Handling Sensitive Data",
    "description": "",
    "links": []
  },
  "IuBZY-ISP1Sy_5OQ99jLY": {
    "title": "Server Actions",
    "description": "",
    "links": []
  },
  "HdSmD_nDV5BPO5JJqs1k8": {
    "title": "Client Rendered",
    "description": "",
    "links": []
  },
  "m7eKlykOZCA3BLuBHioDj": {
    "title": "Server Rendered",
    "description": "",
    "links": []
  },
  "6O9c3J-1JQtZTXXIDDXSM": {
    "title": "Composition",
    "description": "",
    "links": []
  },
  "BfNON3Vp3zSWBurSS4ZHo": {
    "title": "Global CSS",
    "description": "",
    "links": []
  },
  "tlg5XMVcAHmhey-efjf3M": {
    "title": "CSS Modules",
    "description": "",
    "links": []
  },
  "5H7toz-DxtnwjozCgLuk6": {
    "title": "Sass",
    "description": "",
    "links": []
  },
  "3IKXvlA9P06GiOi34zv5H": {
    "title": "Tailwind CSS",
    "description": "",
    "links": []
  },
  "j5jIZvz_bMZqmr_gl0pQF": {
    "title": "CSS in JS",
    "description": "",
    "links": []
  },
  "1t9iOcmrEmuwOxOZ0vlY7": {
    "title": "Images",
    "description": "",
    "links": []
  },
  "1SJX-nGuhIxGH0ukfluoQ": {
    "title": "Videos",
    "description": "",
    "links": []
  },
  "ZptECTASMX97m5yCZ-XO8": {
    "title": "Fonts",
    "description": "",
    "links": []
  },
  "45XMR5imHEDF_X8wcgjGW": {
    "title": "Metadata",
    "description": "",
    "links": []
  },
  "JFrpy3dGt-UP9Weo1VBvN": {
    "title": "Scripts",
    "description": "",
    "links": []
  },
  "qM_Za9NiCiCG5-kf5RCXF": {
    "title": "Package Bundling",
    "description": "",
    "links": []
  },
  "3_Mpvkxp9A7PMogxxMikQ": {
    "title": "Lazy Loading",
    "description": "",
    "links": []
  },
  "a34ZmSk5VYVLq8wsEvOcI": {
    "title": "Analytics",
    "description": "",
    "links": []
  },
  "DHqdXJFhVZWaNa5zSX8Wk": {
    "title": "Instrumentation",
    "description": "",
    "links": []
  },
  "mTh5PZNpzJNKPqpu5PVL6": {
    "title": "OpenTelemetry",
    "description": "",
    "links": []
  },
  "iabbuLHqAiRkgj03t64x7": {
    "title": "Static Assets",
    "description": "",
    "links": []
  },
  "-j38AhG6LUCH5GupGiqUM": {
    "title": "Third Party Libraries",
    "description": "",
    "links": []
  },
  "SI7KzNSLP0ccH_P94StGL": {
    "title": "Memory Usage",
    "description": "",
    "links": []
  },
  "ZFHkHmvjndPjDAB-MAtb7": {
    "title": "TypeScript",
    "description": "",
    "links": []
  },
  "efMytbUmw44M8dPL4ItsX": {
    "title": "Prettier",
    "description": "",
    "links": []
  },
  "CvrHzkxg7ndCvd_tbYnK4": {
    "title": "ESLint",
    "description": "",
    "links": []
  },
  "ThrO72opK7xGWpy0GG63T": {
    "title": "Setting things Up",
    "description": "",
    "links": []
  },
  "iv6rWEqjh07d0n2kAQedO": {
    "title": "Environment Variables",
    "description": "",
    "links": []
  },
  "3GI0xHGG_qgpLfEjaLYxr": {
    "title": "Markdown and MDX",
    "description": "",
    "links": []
  },
  "Hj01UZuHkQppXTq6XV9Pn": {
    "title": "Custom Server",
    "description": "",
    "links": []
  },
  "KTZRo1Y_Z-7eMYzZ9W0Vl": {
    "title": "Vitest",
    "description": "",
    "links": []
  },
  "sc5Pliyq6bfeFXp0ca5yH": {
    "title": "Jest",
    "description": "",
    "links": []
  },
  "qFDdfOBdOlGMjTEOiiuTe": {
    "title": "Playwright",
    "description": "",
    "links": []
  },
  "KmOTgclnf-QYDYK0QwwVe": {
    "title": "Cypress",
    "description": "",
    "links": []
  },
  "-yiJSBIoczJHOW8YMdWFI": {
    "title": "Preparing for Production",
    "description": "",
    "links": []
  },
  "BPStVqWV0660A-_fJSuM7": {
    "title": "Deployment Options",
    "description": "",
    "links": []
  },
  "FdvaN6BOxUEJt7TarSDmo": {
    "title": "React Frameworks",
    "description": "React frameworks provide structure and tools to streamline the development of React applications. They offer solutions for common challenges like routing, data fetching, state management, and build processes, allowing developers to focus on building features rather than configuring infrastructure. These frameworks often include pre-built components, optimized performance configurations, and conventions that promote code organization and maintainability.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Comparing The Top React Frameworks",
        "url": "https://dev.to/surajondev/comparing-the-top-cra-alternatives-9cg",
        "type": "article"
      }
    ]
  },
  "7EYQnX3cEAjSL-iJSprEI": {
    "title": "SSR",
    "description": "Server-Side Rendering (SSR) is a technique where a web application's HTML is generated on the server in response to each user request. The server then sends the fully rendered HTML to the client's browser, which displays it. This differs from client-side rendering, where the browser downloads a minimal HTML page and then uses JavaScript to render the content.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Server-side Rendering (SSR)",
        "url": "https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering",
        "type": "article"
      },
      {
        "title": "What is Server-Side Rendering: Definition, Benefits and Risks",
        "url": "https://solutionshub.epam.com/blog/post/what-is-server-side-rendering",
        "type": "article"
      }
    ]
  },
  "NC7s-EOLWhjXR70JFZxcg": {
    "title": "SPA",
    "description": "A Single-Page Application (SPA) is a web application that loads a single HTML page and dynamically updates that page as the user interacts with the application. This is achieved by using JavaScript to manipulate the DOM (Document Object Model) directly, rather than requesting new HTML pages from the server for each interaction. This approach provides a more fluid and responsive user experience, as the browser doesn't need to reload the entire page for every change.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "https://nextjs.org/docs/app/guides/single-page-applications",
        "url": "https://nextjs.org/docs/app/guides/single-page-applications",
        "type": "article"
      },
      {
        "title": "Single-page application",
        "url": "https://en.wikipedia.org/wiki/Single-page_application",
        "type": "article"
      }
    ]
  },
  "4CcK-BLP5NM3ZrCIEG4s8": {
    "title": "CSR",
    "description": "In Client-Side Rendering (CSR) with React, the browser downloads a minimal HTML page and the JavaScript needed for the page. The JavaScript is then used to update the DOM and render the page. When the application is first loaded, the user may notice a slight delay before they can see the full page, this is because the page isn't fully rendered until all the JavaScript is downloaded, parsed, and executed.\n\nAfter the page has been loaded for the first time, navigating to other pages on the same website is typically faster, as only necessary data needs to be fetched, and JavaScript can re-render parts of the page without requiring a full page refresh.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Client-side Rendering (CSR)",
        "url": "https://nextjs.org/docs/pages/building-your-application/rendering/client-side-rendering",
        "type": "article"
      },
      {
        "title": "What is Client-side Rendering (CSR)?",
        "url": "https://prismic.io/blog/client-side-rendering",
        "type": "article"
      }
    ]
  },
  "CqPZHOs1Iew6PCIjwiqUt": {
    "title": "SSG",
    "description": "Static Site Generation (SSG) is a rendering method that generates HTML pages at build time. This means that when a user requests a page, the server sends a pre-rendered HTML file, rather than dynamically generating it on each request. This approach leads to faster load times and improved SEO, as search engines can easily crawl and index the static content.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Static Site Generation (SSG)",
        "url": "https://nextjs.org/docs/pages/building-your-application/rendering/static-site-generation",
        "type": "article"
      }
    ]
  },
  "htuyzi5_N-fqnx_SsO_DS": {
    "title": "Pages",
    "description": "The Pages Router in Next.js is a file-system based router built around the `pages` directory. Each file in the `pages` directory becomes a route based on its file name. For example, a file named `about.js` would create a route at `/about`. This approach simplifies routing by automatically mapping files to routes, making it easy to create and manage different pages within your application.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Pages Router",
        "url": "https://nextjs.org/docs/pages",
        "type": "article"
      },
      {
        "title": "Pages Router Tutorial",
        "url": "https://nextjs.org/learn/pages-router",
        "type": "article"
      }
    ]
  },
  "3VXKRDxDmqJObkoW8ndrz": {
    "title": "App",
    "description": "The App Router is a file-system based router that uses React's latest features, such as [Server Components](https://react.dev/reference/rsc/server-components), [Suspense](https://react.dev/reference/react/Suspense), and [Server Functions](https://react.dev/reference/rsc/server-functions)\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "App Router Tutorial",
        "url": "https://nextjs.org/learn/dashboard-app",
        "type": "article"
      },
      {
        "title": "Next js Tutorial for Beginners | Nextjs 13 (App Router) with TypeScript",
        "url": "https://www.youtube.com/watch?v=ZVnjOPwW4ZA",
        "type": "article"
      }
    ]
  },
  "dP6cZkEZ6lxPsy5SjvuZA": {
    "title": "Intercepting Routes",
    "description": "",
    "links": []
  },
  "2N_hm9Zx_Lp-RFEMP9HFb": {
    "title": "Parallel Routes",
    "description": "",
    "links": []
  },
  "hQHvu7MzNwA2lL9ADm5YQ": {
    "title": "Static vs Dynamic",
    "description": "",
    "links": []
  },
  "lR7oPh0DCY_BhzXH31N36": {
    "title": "Streaming",
    "description": "",
    "links": []
  },
  "K1wGmAy9L0VE6cwYE2pA6": {
    "title": "Reditects",
    "description": "",
    "links": []
  },
  "0Rgs7jaFX1Gl5KDT6DKbX": {
    "title": "Caching",
    "description": "",
    "links": []
  },
  "gpZNwsh075wl5eH2gLKro": {
    "title": "Middelware",
    "description": "",
    "links": []
  },
  "XwDF-Kt9K5smm3ruxlkR2": {
    "title": "Setting Headers",
    "description": "",
    "links": []
  },
  "8kUhcd2-BlqOKInEuSI95": {
    "title": "Using Cookies",
    "description": "",
    "links": []
  },
  "54Cc_GdL327tzkdYBA305": {
    "title": "Use cases",
    "description": "",
    "links": []
  },
  "Sn-8ztsjjtUxD_SP6w3cS": {
    "title": "Route Matcher",
    "description": "",
    "links": []
  },
  "lkdBRzC8lAvRYKBt7E37V": {
    "title": "Fetching Locations",
    "description": "",
    "links": []
  },
  "LN7SHgcQp9gX_jfEN84YP": {
    "title": "Runtimes and Types",
    "description": "",
    "links": []
  },
  "0S37ka1K-TdYLnjCBrKSH": {
    "title": "Node.js",
    "description": "",
    "links": []
  },
  "SYUKB1Afciqz7hA1n5yIx": {
    "title": "Edge",
    "description": "",
    "links": []
  },
  "bSsM7VLZcJKYL5XXSG0r-": {
    "title": "Internationalization",
    "description": "",
    "links": []
  },
  "Okw_IjU2iRSvSQVdKeeCo": {
    "title": "Node.js Server",
    "description": "",
    "links": []
  },
  "y5_zX209AaHOf_wQibo12": {
    "title": "Docker Container",
    "description": "",
    "links": []
  },
  "evmzZ6F7TWgYhdaahnZHY": {
    "title": "Static Export",
    "description": "",
    "links": []
  },
  "fXXlJ6oN_YPWVr-fqEar3": {
    "title": "Adapters",
    "description": "",
    "links": []
  }
}